name: Optimum Neuron / Cache Lookup on CPU

on:
  push:
    branches: [ main ]
    paths:
      - "pyproject.toml"
      - "optimum/**.py"
      - ".github/workflows/test_cpu_lookup.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "pyproject.toml"
      - "optimum/**.py"
      - ".github/workflows/test_cpu_lookup.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-cpu-compilation:
    name: Run CPU Compilation Tests
    runs-on: ubuntu-22.04
    env:
      MODEL_ID: Qwen/Qwen3-0.6B
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Neuronx runtime
        uses: ./.github/actions/install_neuronx_runtime
      - name: Prepare virtual environment
        uses: ./.github/actions/prepare_venv
      - name: Install optimum-neuron
        uses: ./.github/actions/install_optimum_neuron
      - name: Setup PATH
        run: echo "/home/ubuntu/.local/bin" >> $GITHUB_PATH
      - name: Export sample model and synchronize cache
        run: |
          source aws_neuron_venv_pytorch/bin/activate
          HF_TOKEN=${{ secrets.HF_TOKEN_OPTIMUM_NEURON_CI }} \
            optimum-cli export neuron -m $MODEL_ID /tmp/exported-$MODEL_ID \
            --batch_size 4 --sequence_length 4096 --tensor_parallel_size 2 --instance_type trn1
          HF_TOKEN=${{secrets.HF_TOKEN_OPTIMUM_NEURON_CACHE}} \
            optimum-cli neuron cache synchronize
      - name: Setup new virtual environment without neuronx
        run: |
          python3 -m venv on-no-neuronx
          source on-no-neuronx/bin/activate
          pip install torch==2.8.0 torchvision~=0.23 --index-url https://download.pytorch.org/whl/cpu
          pip install .
      - name: Run lookup test
        run: |
          source on-no-neuronx/bin/activate
          HF_TOKEN=${{secrets.HF_TOKEN_OPTIMUM_NEURON_CACHE}} \
            optimum-cli neuron cache lookup $MODEL_ID
