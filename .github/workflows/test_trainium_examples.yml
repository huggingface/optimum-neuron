name: Optimum Neuron - Test Example Scripts

on:
  workflow_dispatch:
    inputs:
      coverage:
        description: Coverage
        type: choice
        options:
          - all
          - high
          - middle
          - low
        required: true
      model_size:
        description: Size of models
        type: choice
        options:
          - regular
          - tiny
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  optimum-neuron-tests:
    name: Run example script tests on Trainium 1
    runs-on:
      group: aws-trn1-2xlarge
    env:
      RUN_TINY: ${{ github.event.inputs.model_size == "tiny" && "1" || "0" }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Neuronx runtime
        uses: ./.github/actions/install_neuronx_runtime
      - name: Install cv2 dependencies
        run: |
          sudo apt-get install ffmpeg libsm6 libxext6  -y
      - name: Prepare virtual environment
        uses: ./.github/actions/prepare_venv
      - name: Install optimum-neuron
        uses: ./.github/actions/install_optimum_neuron
      - name: Setup PATH
        run: echo "/home/ubuntu/.local/bin" >> $GITHUB_PATH
      - name: Collect example tests on Neuron Cores
        run: |
          source aws_neuron_venv_pytorch/bin/activate
          HF_TOKEN=${{ secrets.HF_TOKEN_OPTIMUM_NEURON_CI }} USE_VENV=false COVERAGE=${{ github.event.inputs.priority }} RUN_TINY=$RUN_TINY RUN_SLOW=1 pytest -m "is_trainium_test" tests/test_examples.py --collect-only
      - name: Run example tests on Neuron Cores
        run: |
          source aws_neuron_venv_pytorch/bin/activate
          HF_TOKEN=${{ secrets.HF_TOKEN_OPTIMUM_NEURON_CI }} USE_VENV=false COVERAGE=${{ github.event.inputs.priority }} RUN_TINY=$RUN_TINY RUN_SLOW=1 pytest -m "is_trainium_test" tests/test_examples.py -v
